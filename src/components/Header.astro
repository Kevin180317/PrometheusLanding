---
import Language from "@Components/Language";
import Logo from "@public/Logo.svg";
import { getLangFromUrl, useTranslations } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const links = [
  { href: t("link.home"), text: t("nav.home") },
  { href: t("link.products"), text: t("nav.products") },
  // { href: t("link.promo"), text: t("nav.promo") },
  { href: t("link.about"), text: t("nav.about") },
  { href: t("link.contact"), text: t("nav.contact") },
];

const prices = [
  {
    href: "/prices/prototipo/",
    text: "Prototipo",
  },
  {
    href: "/prices/app/",
    text: "App",
  },
  {
    href: "/prices/web/",
    text: "Web",
  },
];

const year = new Date().getFullYear();

const URL = Astro.url.pathname;
---

<nav
  class="flex justify-between items-center px-8 text-white sticky top-0
  w-full shadow-md z-10 bg-gray-800 p-4"
>
  <a href="/" class="flex items-center">
    <Logo class="w-32 h-32" />
  </a>
  {
    URL === "/" ? (
      <div class="hidden md:flex">
        {links.map((link) => (
          <a href={link.href} class="text-3xl px-4 hover:opacity-75">
            {link.text}
          </a>
        ))}
      </div>
    ) : URL === "/prices/web" ||
      URL === "/prices/app" ||
      URL === "/prices/prototipos" ? (
      <div class="hidden md:flex">
        {prices.map((link) => (
          <a href={link.href} class="text-3xl px-4 hover:opacity-75">
            {link.text}
          </a>
        ))}
      </div>
    ) : URL === "/terms" ||
      URL === "/privacy" ||
      URL === "/product" ||
      URL === "/contact" ? (
      <div />
    ) : null
  }

  <div>
    <Language client:visible />
  </div>
  <button
    id="menuButton"
    class="md:hidden p-2 rounded-full hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="icon icon-tabler icons-tabler-outline icon-tabler-menu"
      ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
        d="M4 8h16"></path><path d="M4 16h16"></path></svg
    >
  </button>
</nav>

<div
  id="mobileMenu"
  class="fixed top-0 right-0 w-full h-full bg-gray-800 text-white p-4 transform translate-x-full transition-transform origin-right z-50 flex flex-col"
>
  <button
    id="closeMenuButton"
    class="p-2 rounded-full hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 absolute top-4 right-4"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="icon icon-tabler icons-tabler-outline icon-tabler-x"
      ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
        d="M18 6L6 18"></path><path d="M6 6l12 12"></path></svg
    >
  </button>
  <div class="flex flex-col items-center mt-16 space-y-8 flex-grow">
    <div class="flex items-center">
      <img src="/logo.webp" class="w-48 h-16" alt="Logo" />
    </div>
    <div class="text-4xl font-bold">Menu</div>
    <div class="flex flex-col items-center space-y-4 flex-grow">
      {
        links.map((link) => (
          <a href={link.href} class="text-3xl py-2 hover:opacity-75">
            {link.text}
          </a>
        ))
      }
    </div>
    <div class="mt-auto">
      <p class="text-center text-xl">&copy; {year} Prometheus</p>
    </div>
  </div>
</div>

<script>
  const menuButton = document.getElementById("menuButton");
  const closeMenuButton = document.getElementById("closeMenuButton");
  const mobileMenu = document.getElementById("mobileMenu");
  if (menuButton && mobileMenu && closeMenuButton) {
    menuButton.addEventListener("click", () => {
      mobileMenu.classList.toggle("translate-x-full");
    });
    closeMenuButton.addEventListener("click", () => {
      mobileMenu.classList.toggle("translate-x-full");
    });
  }
</script>
